name: Build and Deploy Code

# on:
#   push:
#     branches:
#       - "deploy"
#       - "other_branch"
#   pull_request:
#     branches:
#       - "deploy"
#       - "test"
on: [push, pull_request]

jobs:
  build:
    environment:
      name: testing
    env:
      DATABASE_HOSTNAME: ${{secrets.DATABASE_HOSTNAME}}
      DATABASE_PORT: ${{secrets.DATABASE_PORT}}
      DATABASE_PASSWORD: ${{secrets.DATABASE_PASSWORD}}
      DATABASE_NAME: ${{secrets.DATABASE_NAME}}
      DATABASE_USERNAME: ${{secrets.DATABASE_USERNAME}}
      SECRET_KEY: ${{secrets.SECRET_KEY}}
      ALGORITHM: ${{secrets.ALGORITHM}}
      ACCESS_TOKEN_EXPIRES_IN: ${{secrets.ACCESS_TOKEN_EXPIRES_IN}}

    # setting up a postgres container
    services:
      postgres:
        image: posgres
        env:
          POSTGRES_PASSWORD: postgres # ${{secrets.DATABASE_PASSWORD}}
          # POSTGRES_DB:  # ${{secrets.DATABASE_NAME}}
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    runs-on: ubuntu-latest #${{ matrix.os }}
    # strategy:
    # matrix:
    #   # os: [ubuntu-latest, macos-latest, windows-latest]
    #   python-version: ['3.9', '3.10']
    steps:
      - name: pulling git repo
        uses: actions/checkout@v3
      - name: install python version 3.10
        uses: actions/setup-python@v2
        with:
          python-version: 3.10 #${{ matrix.python-version }}
      - name: update pip
        run: python -m pip install --upgrade pip
      - name: install dependencies
        run: pip install -r requirements.txt
      - name: test with pytest
        run: |
          pip install pytest
          pytest -v
